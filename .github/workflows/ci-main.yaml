name: Main Branch Pipeline
on:
  workflow_call:
    inputs:
      componentName:
        required: true
        type: string

run-name: ${{ github.sha }} | ${{ github.event.head_commit.message }}
jobs:
  UNIT-TESTS:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo npm test

  build:
    runs-on: self-hosted
    needs: UNIT-TESTS
    steps:
      - uses: actions/checkout@v4
      - run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 897722697588.dkr.ecr.us-east-1.amazonaws.com
          if [ ${{ inputs.componentName }} == "shipping" ]; then
            curl -v -L -O https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip
            unzip newrelic-java.zip
          fi
          e=$(aws ecr describe-images --repository-name roboshop-${{ inputs.componentName }} | grep ${{ github.sha }} | wc -l)
          if [ $e -eq 0 ]; then
            docker build -t 897722697588.dkr.ecr.us-east-1.amazonaws.com/roboshop-${{ inputs.componentName }}:${{ github.sha }} .
            docker push 897722697588.dkr.ecr.us-east-1.amazonaws.com/roboshop-${{ inputs.componentName }}:${{ github.sha }}
          fi


  DEV:
    runs-on: self-hosted
    needs: build
    environment: DEV
    steps:
      - uses: actions/checkout@v4
        name: CheckOut Code
      - run: |
          aws eks update-kubeconfig --name dev-eks
          PASS=$(kubectl get secrets argocd-initial-admin-secret -n argocd --template={{.data.password}} | base64 --decode)
          argocd login argocd-dev.rdevopsb81.online --username admin --password $PASS --insecure --skip-test-tls --grpc-web
        name: ArgoCD login
      - run: |
          argocd app create ${{ inputs.componentName }} --repo https://github.com/raghudevopsb81/roboshop-helm.git  --path . --dest-namespace default --dest-server https://kubernetes.default.svc  --values env-dev/${{ inputs.componentName }}.yaml  --helm-set COMMIT_ID=${{ github.sha }} --upsert
          argocd app sync ${{ inputs.componentName }}

  QA:
    runs-on: self-hosted
    needs: DEV
    environment: QA
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo

  E2E-TESTS:
    runs-on: self-hosted
    needs: QA
    environment: QA
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo

  UAT:
    runs-on: self-hosted
    needs: QA
    environment: E2E-TESTS
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo

  PROD:
    runs-on: self-hosted
    needs: UAT
    environment: PROD
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo
##
